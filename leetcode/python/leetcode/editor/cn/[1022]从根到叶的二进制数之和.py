# ÁªôÂá∫‰∏ÄÊ£µ‰∫åÂèâÊ†ëÔºåÂÖ∂‰∏äÊØè‰∏™ÁªìÁÇπÁöÑÂÄºÈÉΩÊòØ 0 Êàñ 1 „ÄÇÊØè‰∏ÄÊù°‰ªéÊ†πÂà∞Âè∂ÁöÑË∑ØÂæÑÈÉΩ‰ª£Ë°®‰∏Ä‰∏™‰ªéÊúÄÈ´òÊúâÊïà‰ΩçÂºÄÂßãÁöÑ‰∫åËøõÂà∂Êï∞„ÄÇ 
# 
#  
#  ‰æãÂ¶ÇÔºåÂ¶ÇÊûúË∑ØÂæÑ‰∏∫ 0 -> 1 -> 1 -> 0 -> 1ÔºåÈÇ£‰πàÂÆÉË°®Á§∫‰∫åËøõÂà∂Êï∞ 01101Ôºå‰πüÂ∞±ÊòØ 13 „ÄÇ 
#  
# 
#  ÂØπÊ†ë‰∏äÁöÑÊØè‰∏ÄÁâáÂè∂Â≠êÔºåÊàë‰ª¨ÈÉΩË¶ÅÊâæÂá∫‰ªéÊ†πÂà∞ËØ•Âè∂Â≠êÁöÑË∑ØÂæÑÊâÄË°®Á§∫ÁöÑÊï∞Â≠ó„ÄÇ 
# 
#  ËøîÂõûËøô‰∫õÊï∞Â≠ó‰πãÂíå„ÄÇÈ¢òÁõÆÊï∞ÊçÆ‰øùËØÅÁ≠îÊ°àÊòØ‰∏Ä‰∏™ 32 ‰Ωç Êï¥Êï∞„ÄÇ 
# 
#  
# 
#  Á§∫‰æã 1Ôºö 
# 
#  
# ËæìÂÖ•Ôºöroot = [1,0,1,0,1,0,1]
# ËæìÂá∫Ôºö22
# Ëß£ÈáäÔºö(100) + (101) + (110) + (111) = 4 + 5 + 6 + 7 = 22
#  
# 
#  Á§∫‰æã 2Ôºö 
# 
#  
# ËæìÂÖ•Ôºöroot = [0]
# ËæìÂá∫Ôºö0
#  
# 
#  
# 
#  ÊèêÁ§∫Ôºö 
# 
#  
#  Ê†ë‰∏≠ÁöÑËäÇÁÇπÊï∞Âú® [1, 1000] ËåÉÂõ¥ÂÜÖ 
#  Node.val ‰ªÖ‰∏∫ 0 Êàñ 1 
#  
#  üëç 153 üëé 0


# leetcode submit region begin(Prohibit modification and deletion)
# Definition for a binary tree node.
from typing import Optional


class TreeNode:
    def __init__(self, val=0, left=None, right=None):
        self.val = val
        self.left = left
        self.right = right


class Solution:
    def sumRootToLeaf(self, root: Optional[TreeNode]) -> int:
        """
        ÊñπÊ≥ï1ÔºöÂâçÂ∫èÈÅçÂéÜ
        """
        ans = 0

        def pre_order(root, cur):
            cur += str(root.val)
            if not root.left and not root.right:
                nonlocal ans
                ans += int(cur, 2)
                return
            pre_order(root.left, cur)
            pre_order(root.right, cur)

        pre_order(root, '')
        return ans


# leetcode submit region end(Prohibit modification and deletion)

if __name__ == '__main__':
    root = TreeNode(val=1,
                    left=TreeNode(val=0,
                                  left=TreeNode(val=0),
                                  right=TreeNode(val=1)),
                    right=TreeNode(val=1,
                                   left=TreeNode(val=0),
                                   right=TreeNode(val=1)))

    result = Solution().sumRootToLeaf(root)
    print(result)
