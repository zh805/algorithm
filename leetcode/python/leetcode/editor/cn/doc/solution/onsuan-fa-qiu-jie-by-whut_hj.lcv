### 解题思路

假设按照峰-谷-峰的顺序排列数组，那么遍历一遍数组：
（1）如果i为峰的位置，则判断当前位置是否小于前一个位置（前一个为谷），若小于，则交换，大于则不处理。即： if(nums[i]<nums[i-1]) swap(nums[i],nums[i-1]);
（2）如果i为谷的位置，则判断当前位置是否大于前一个位置（前一个为峰），若大于，则交换，大于则不处理。即： if(nums[i]>nums[i-1]) swap(nums[i],nums[i-1]);
![image.png](https://pic.leetcode-cn.com/4b732e69da6c6f4b6f08b1224366a14741c5ed5ce13fdf5574ad044ec8d22b6f-image.png)

### 代码

* cpp

```cpp
class Solution {
public:
    void wiggleSort(vector<int>& nums) {
        for(int i=1;i<nums.size();i++){
            if(i%2==0){
                if(nums[i]<nums[i-1]) swap(nums[i],nums[i-1]);
            }
            else{
                if(nums[i]>nums[i-1]) swap(nums[i],nums[i-1]);
            }
        }
    }
};
```

