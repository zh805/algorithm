### 解题思路

- 友情链接[「手画图解」简单问题细致分析，两种DFS回溯思路 | 78.子集](https://leetcode-cn.com/problems/subsets/solution/shou-hua-tu-jie-zi-ji-hui-su-fa-xiang-jie-wei-yun-/)

### 实现方式1

* javascript

```javascript
/**
 * @param {number[]} nums
 * @return {number[][]}
 */
var subsets = function (nums) {
  let res = [];
  // 记录走过的路径;
  let track = [];
  const backtrack = (nums, start, track) => {
    res.push([...track]);
    // 注意 i 从 start 开始递增
    for (let i = start; i < nums.length; i++) {
      // 做选择
      track.push(nums[i]);
      // 回溯 基于选这个数，继续递归，传入的是i+1，不是start+1
      backtrack(nums, i + 1, track);
      // 撤销选择
      track.pop();
    }
  };
  backtrack(nums, 0, track);
  return res;
};
```

### 实现方式2

* javascript

```javascript
/**
 * @param {number[]} nums
 * @return {number[][]}
 */
var subsets = function (nums) {
  const res = [];

  const dfs = (index, list) => {
    if (index == nums.length) {
      // 指针越界
      res.push(list.slice()); // 加入解集
      return; // 结束当前的递归
    }
    list.push(nums[index]); // 选择这个数
    dfs(index + 1, list); // 基于该选择，继续往下递归，考察下一个数
    list.pop(); // 上面的递归结束，撤销该选择
    dfs(index + 1, list); // 不选这个数，继续往下递归，考察下一个数
  };

  dfs(0, []);
  return res;
};
```

