## 乘法原理

对于 $n = 0$ 的情况较为特殊，特判一下，返回 $1$。

对于其他情况，由于不能含有前导 $0$，最高位可选择的数值个数为 $9$，而从次高位开始到最低位，可选的个数从 $9$ 开始逐一递减。

利用乘法原理，每位数可选的数值个数相乘即是长度为 $n$ 的数的可能方案数 $cur$，而所有长度 $[1, n]$ 的方案数累加即是答案。

代码：

* []

```Java
class Solution {
    public int countNumbersWithUniqueDigits(int n) {
        if (n == 0) return 1;
        int ans = 10;
        for (int i = 2, last = 9; i <= n; i++) {
            int cur = last * (10 - i + 1);
            ans += cur;
            last = cur;
        }
        return ans;
    }
}
```

* 时间复杂度：$O(n)$
* 空间复杂度：$O(1)$

---

## 最后

**如果有帮助到你，请给题解点个赞和收藏，让更多的人看到 ~ ("▔□▔)/**

也欢迎你 [关注我](https://oscimg.oschina.net/oscnet/up-19688dc1af05cf8bdea43b2a863038ab9e5.png) 和 加入我们的[「组队打卡」](https://leetcode-cn.com/u/ac_oier/)小群 ，提供写「证明」&「思路」的高质量题解。

所有题解已经加入 [刷题指南](https://github.com/SharingSource/LogicStack-LeetCode/wiki)，欢迎 star 哦 ~
