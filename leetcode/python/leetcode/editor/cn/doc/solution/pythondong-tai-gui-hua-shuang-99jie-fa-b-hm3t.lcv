### 解题思路

![图片.png](https://pic.leetcode-cn.com/1646211599-nLCZzW-%E5%9B%BE%E7%89%87.png)
由题意知将数组分为两组，一组和为plus，一组和为cut,求plus-cut=target的方案数
最终可以变形为求plus=(target+sum)//2的个数，运用背包问题框架，定义dp[j]为容量为j时的方法数即可求解。

### 代码

* python

```python
class Solution(object):
    def findTargetSumWays(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: int
        """
        total=sum(nums)
        # math: plus-cut=target,cut+plus=sum,plus=target+cut=target+sum-plus
        # thus plus=(target+sum)//2
        if (target+total)%2==1 or abs(target)>total:
            return 0
        bagesize=(target+total)//2
        dp=[0]*(bagesize+1)
        dp[0]=1
        for i in range(len(nums)):
            for j in range(bagesize,nums[i]-1,-1):
                dp[j]+=dp[j-nums[i]]
        return dp[bagesize]
```

