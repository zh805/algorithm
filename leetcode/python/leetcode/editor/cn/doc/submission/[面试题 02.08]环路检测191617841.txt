# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def detectCycle(self, head: ListNode) -> ListNode:
        slow, fast = head, head
        while fast:
            if not fast.next:
                return None
            fast = fast.next.next
            slow = slow.next
            if slow == fast:
                first = head
                while first != slow:
                    first = first.next
                    slow = slow.next
                return first



# runtime:80 ms
# memory:17.8 MB
