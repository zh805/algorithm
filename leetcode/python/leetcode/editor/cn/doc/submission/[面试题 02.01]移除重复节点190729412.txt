# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def removeDuplicateNodes(self, head: ListNode) -> ListNode:
        if not head:
            return head
        node_set = set()
        if not head.next:
            return head
        node_set.add(head.val)        
        curr = head
        while curr.next.next:
            curr_next_val = curr.next.val
            if curr_next_val in node_set:
                curr.next = curr.next.next
            else:
                node_set.add(curr_next_val)
                curr = curr.next
                
        c_n_val = curr.next.val
        if c_n_val in node_set:
            curr.next = None    
        return head


# runtime:84 ms
# memory:20.8 MB
