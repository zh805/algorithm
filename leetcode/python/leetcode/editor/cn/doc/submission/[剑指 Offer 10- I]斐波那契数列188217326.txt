
class Solution:
    # def fib(self, n: int) -> int:
    #     # 动态规划，转移方程
    #     a, b = 0, 1
    #     for i in range(n):
    #         c = a + b
    #         a, b = b, c
    #     return a % 1000000007

    from functools import lru_cache

    @lru_cache
    def fib(self, n: int) -> int:
        if n == 0:
            return 0
        if n == 1:
            return 1
        return (self.fib(n-1) + self.fib(n-2)) % 1000000007


# runtime:44 ms
# memory:15 MB
