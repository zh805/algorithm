import heapq
from typing import List


class KthLargest:
    """
    方法1：python内置的堆（小顶堆），维护一个k个元素的堆，堆顶即为第K大的元素。
    """
    def __init__(self, k: int, nums: List[int]):
        self.k = k
        self.heap = []
        for num in nums:
            heapq.heappush(self.heap, num)
            if len(self.heap) > k:
                heapq.heappop(self.heap)

    def add(self, val: int) -> int:
        heapq.heappush(self.heap, val)
        if len(self.heap) > self.k:
            heapq.heappop(self.heap)
        return self.heap[0]
#
# class KthLargest:
#
#     def __init__(self, k: int, nums: List[int]):
#
#     def add(self, val: int) -> int:

# Your KthLargest object will be instantiated and called as such:
# obj = KthLargest(k, nums)
# param_1 = obj.add(val)

# runtime:148 ms
# memory:18.8 MB
