# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def reverseKGroup(self, head: ListNode, k: int) -> ListNode:
        if head is None or k==1:
            return head
        
        dummyhead = pre = ListNode(-1)
        dummyhead.next = cur = nex = head
        
        num=0
        while cur:
            num += 1
            cur = cur.next
        
        while num>=k:
            cur = pre.next
            nex = cur.next
            
            for i in range(1,k):
                cur.next = nex.next
                nex.next = pre.next
                pre.next = nex
                nex = cur.next
            pre = cur
            num -= k
        
        return dummyhead.next

# runtime:72 ms
# memory:14.1 MB
