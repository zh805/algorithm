class Solution:
    def isValid(self, s: str) -> bool:
        n = len(s)
        if n == 0:
            return True
        if n % 2 != 0:
            return False
        while '()' in s or '[]' in s or '{}' in s:
            s = s.replace('{}', '').replace('[]', '').replace('()', '')
        
        if s == '':
            return True
        else:
            return False
    
            
        # if s is None:
        #     return True
        # stack = []
        # for t in s:
        #     if t == ')':
        #         try:
        #             current = stack.pop()
        #             if current != '(':
        #                 return False
        #         except:
        #             return False
        #     elif t == ']':
        #         try:
        #             current = stack.pop()
        #             if current != '[':
        #                 return False
        #         except:
        #             return False
        #     elif t == '}':
        #         try:
        #             current = stack.pop()
        #             if current != '{':
        #                 return False
        #         except:
        #             return False
        #     else:
        #         stack.append(t)
        # if len(stack) == 0:
        #     return True
        # else:
        #     return False
        
# runtime:92 ms
# memory:13.5 MB
