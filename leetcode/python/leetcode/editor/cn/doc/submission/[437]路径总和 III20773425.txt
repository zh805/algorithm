/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    //在以root为根结点的二叉树中，寻找和为sum的路径，返回这样的路径个数
    int pathSum(TreeNode* root, int sum) {
        if(root == NULL)
            return 0;
        int res = findpath(root,sum);
        
        res += pathSum(root->left,sum);
        res += pathSum(root->right,sum);
        
        return res;
    }

private:
    //在以node为根结点的二叉树中，寻找包含node的路径，和为num
    //返回这样的路径个数
    int findpath(TreeNode* node,int num){
        if(node==NULL)
            return 0;
        int res = 0;
        if(node->val == num)
            res += 1;
        
        res += findpath(node->left,num - node->val);
        res += findpath(node->right,num - node->val);
        
        return res;
    }
    
};
//runtime:28 ms
//memory:14.3 MB
