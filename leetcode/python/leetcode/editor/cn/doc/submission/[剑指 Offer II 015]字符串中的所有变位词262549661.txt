
from typing import List


class Solution:
    def findAnagrams(self, s: str, p: str) -> List[int]:
        """
        方法1：滑动窗口
        :param s:
        :param p:
        :return:
        """
        result = []
        len_s, len_p = len(s), len(p)
        if len_p < len_p:
            return result
        # 统计字符串p中每个字符出现的次数
        p_num = [0 for _ in range(26)]
        for c in p:
            p_num[ord(c) - ord('a')] += 1

        window = [0 for _ in range(26)]
        for idx, c in enumerate(s):
            if idx < len_p:
                window[ord(c) - ord('a')] += 1
            else:
                # 窗口右进一个，左出一个
                window[ord(c) - ord('a')] += 1
                window[ord(s[idx-len_p]) - ord('a')] -= 1
            if p_num == window:
                result.append(idx - len_p + 1)
        return result


# runtime:84 ms
# memory:15.4 MB
