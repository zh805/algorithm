# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def largestValues(self, root: TreeNode) -> List[int]:
        """
        方法1：层序遍历,找出每层最大的节点值。
        :param root:
        :return:
        """
        res = []
        if not root:
            return res

        from collections import deque
        q = deque()
        q.append(root)
        while q:
            layer = []
            for _ in range(len(q)):
                node = q.popleft()
                layer.append(node.val)
                if node.left:
                    q.append(node.left)
                if node.right:
                    q.append(node.right)
            res.append(max(layer))
        return res


# runtime:52 ms
# memory:17.4 MB
