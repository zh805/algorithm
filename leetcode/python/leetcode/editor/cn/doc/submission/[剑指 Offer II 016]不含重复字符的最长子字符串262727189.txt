class Solution:
    def lengthOfLongestSubstring(self, s: str) -> int:
        """
        方法1：滑动窗口
        :param s:
        :return:
        """
        result = 0

        # key为字符，value为最近一次此字符出现的位置
        window = dict()
        left = 0
        # 窗口右边界持续右移，当字符出现过时，左边界移动。
        for right, c in enumerate(s):
            if c in window:
                # 当字符之前出现过时，移动左边界
                # 若left在字符最近一次出现位置的左边，则需要把left移动到此字符索引+1位置
                # 若left在字符最近一次出现位置的右边，表示重复的内容在左边界外，则left保持不动。
                left = max(left, window[c] + 1)

            result = max(result, right - left + 1)
            window[c] = right

        return result



# runtime:44 ms
# memory:15.1 MB
