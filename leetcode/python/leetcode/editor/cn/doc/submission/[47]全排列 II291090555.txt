class Solution:
    def permuteUnique(self, nums: List[int]) -> List[List[int]]:
        """
        方法1：回溯
        """
        res = []
        path = []
        n = len(nums)
        nums.sort()
        visited = [False for _ in range(n)]

        def traceback():
            if len(path) == n:
                res.append(path[:])
                return
            
            for i in range(n):
                if visited[i]:
                    continue

                if i > 0 and nums[i-1] == nums[i] and not visited[i-1]:
                    continue
                visited[i] = True
                path.append(nums[i])
                traceback()
                visited[i] = False
                path.pop()
        
        traceback()
        return res

# runtime:48 ms
# memory:15.3 MB
