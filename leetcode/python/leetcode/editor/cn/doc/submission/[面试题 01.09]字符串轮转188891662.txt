class Solution:
    # def isFlipedString(self, s1: str, s2: str) -> bool:
    #     s1_len = len(s1)
    #     s2_len = len(s2)
    #     if s1_len != s2_len:
    #         return False
    #     if s1_len == 0:
    #         return True
    #     s_len = len(s1)
    #     for i in range(s_len):
    #         if s1[:i] == s2[s_len - i: s_len] and s1[i:s_len] == s2[:s_len - i]:
    #             return True
    #     return False

    def isFlipedString(self, s1: str, s2: str) -> bool:
        # if len(s1) != len(s2):
        #     return False
        # if s1 in s2+s2:
        #     return True
        # else:
        #     return False
        return True if len(s1) == len(s2) and s1 in s2+s2 else False




# runtime:32 ms
# memory:15.2 MB
