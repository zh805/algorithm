# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def inorderTraversal(self, root: Optional[TreeNode]) -> List[int]:
        res = []
        if not root:
            return res

        stack = []
        p = root
        while stack or p:
            while p:
                stack.append(p)
                p = p.left
            
            node = stack.pop()
            res.append(node.val)
            p = node.right
        return res

# runtime:40 ms
# memory:14.9 MB
