# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def mergeKLists(self, lists: List[ListNode]) -> ListNode:
        """
        方法1：遍历，逐个合并链表
        :param lists: 
        :return: 
        """
        lists_length = len(lists)
        if lists_length == 0:
            return None

        head1 = lists[0]
        for head2 in lists[1:]:
            head1 = self.merge(head1, head2)
        return head1

    def merge(self, head1: ListNode, head2: ListNode) -> ListNode:
        # 合并两个排序链表
        dummy = ListNode()
        cur = dummy
        while head1 and head2:
            if head1.val < head2.val:
                cur.next = head1
                head1 = head1.next
            else:
                cur.next = head2
                head2 = head2.next
            cur = cur.next
        cur.next = head1 if head1 else head2
        return dummy.next



# runtime:4228 ms
# memory:17.8 MB
